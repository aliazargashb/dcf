---
- name: Configure Cisco Nexus Switch - SIC Leaf
  hosts: leafs
  gather_facts: false
  connection: network_cli
  vars:
    ansible_network_os: cisco.nxos.nxos

  tasks:
    - name: Enable necessary features   #OK.$
      cisco.nxos.nxos_feature:
        feature: "{{ item }}"
        state: enabled
      loop: "{{ features }}"
      tags:
        - enable_features

    - name: Configure AAA   #OK.$
      cisco.nxos.nxos_config:
        lines:
          - aaa authentication login default group {{ aaa_srv_grp }} local
          - aaa authentication login console group {{ aaa_srv_grp }} local
          - aaa authorization commands default group {{ aaa_srv_grp }} local
          - aaa accounting default group {{ aaa_srv_grp }} local
          - aaa authorization config-commands default group {{ aaa_srv_grp }} local
          - aaa authentication login error-enable
          - tacacs-server directed-request
          - aaa group server tacacs+ {{ aaa_srv_grp }}
      tags: 
        - aaa_config

    - name: Configure TACACS   #OK.$
      cisco.nxos.nxos_config:
        lines:
          - tacacs-server host {{ item.tacacs_srv_host }} key {{ item.tacacs_srv_key }}
          - tacacs-server host {{ item.tacacs_srv_host }} key {{ item.tacacs_srv_key }}
          # - use-vrf management
          # - source-interface mgmt0
        parents: aaa group server tacacs+ AAA_Servers
      loop: "{{ tacacs_host }}"
      tags: 
        - tacacs_config

    - name: Set Hostname   #OK.$
      cisco.nxos.nxos_hostname:
        config:
          hostname: "{{ hostname }}"
      tags:
        - set_hostname

    - name: Configure NTP   #OK.$
      cisco.nxos.nxos_ntp_global:
        config:
          servers:
            - server: "{{ item }}"
              vrf: "{{ ntp_vrf }}"
      loop: "{{ ntp_server }}"
      tags:
        - ntp_config

    - name: Create user account   #OK.$
      cisco.nxos.nxos_user:
        name: "{{ device_user }}"
        configured_password: "{{ device_pass }}"
        role: "{{ user_role }}"
      tags:
        - create_user

    - name: Enable NV Overlay EVPN   #OK.$
      cisco.nxos.nxos_evpn_global:
        nv_overlay_evpn: true
      tags: evpn_feature

    - name: anycast gateway configuration   #OK.$
      cisco.nxos.nxos_overlay_global:
        anycast_gateway_mac: "{{ anycast_gw_mac }}"
      tags:
        - anycast_gateway

    - name: Configure PIM RP address   #OK.$
      cisco.nxos.nxos_pim_rp_address:
        rp_address: "{{ pim_rp_ip }}"
        group_list: "{{ pim_mgroup }}"
      tags:
        - pim_multicast

    - name: Ensure VLANs are configured   #OK.$
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
            mapped_vni: "{{ item.vnid }}"
        state: merged
      with_items:
        - "{{ vrf_config }}"
      tags:
        - configure_tenant_l3vni

    - name: Configure VRFs   #OK.$
      cisco.nxos.nxos_vrf:
        aggregate:
          - name: "{{ item.vrf_name }}"
            vni: "{{ item.vnid }}"
            rd: "{{ item.vrf_rd }}"
      loop: "{{ vrf_config }}"
      tags:
        - configure_vrf

    - name: LEAF tenants_svi naming configuration   #OK.$
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            description: "{{ item.vlan_name }}"
            enabled: true
        state: merged
      loop: "{{ vrf_config }}"
      tags:
        - tenant_svi_naming

    - name: LEAF tenants_svi vrf membership configuration   #OK.$
      cisco.nxos.nxos_vrf_interface:
        interface: "vlan{{ item.vlan_id }}"
        vrf: "{{ item.vrf_name }}"
        state: present
      loop: "{{ vrf_config }}"
      tags:
        - tenant_vrf_mem

    - name: LEAF tenants_svi ip forward configuration   #OK.$
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            ip_forward: "{{ ipforward }}"
            enabled: true
        state: merged
      loop: "{{ vrf_config }}"
      tags:
        - tenant_ip_forward

    - name: Ensure VLANs are configured   #OK.$
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
            mapped_vni: "{{ item.vnid }}"
        state: merged
      with_items:
        - "{{ l2vlans }}"
        - "{{ l3vlans }}"
      tags:
        - configure_vlans

    - name: Configure VRF_AF   #OK.$
      cisco.nxos.nxos_vrf_af:
        afi: ipv4
        route_target_both_auto_evpn: true
        route_targets:
          - direction: both
            rt: auto
            state: present
        state: present
        vrf: "{{ item.vrf_name }}"
      loop: "{{ vrf_config }}"
      tags:
        - configure_vrf_af

    - name: VNI configuration   #OK.$
      cisco.nxos.nxos_evpn_vni:
        vni: "{{ item.vnid }}"
        route_distinguisher: "{{ l2rd }}"
        route_target_both: "{{ l2rt }}"
        state: "present"
      loop: "{{ l2vlans }}"
      tags:
        - l2evpn

    - name: LEAF SVI Naming   #OK.$
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            description: "{{ item.vlan_name }}"
            fabric_forwarding_anycast_gateway: "{{ anycast_gw_mac_status }}"
            enabled: "{{ svi_status }}"
        state: merged
      loop: "{{ l3vlans }}"
      tags:
        - svi_naming

    - name: LEAF SVI VRF Membership   #OK.$
      cisco.nxos.nxos_vrf_interface:
        interface: "vlan{{ item.vlan_id }}"
        vrf: "{{ item.vrf_name }}"
        state: present
      loop: "{{ l3vlans }}"
      tags:
        - svi_vrf_mem

    - name: LEAF SVI IP Address   #OK.$
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            ipv4:
              - address: "{{ item.vlan_id_ip }}/{{ item.vlan_id_subnet }}"
        state: merged
      loop: "{{ l3vlans }}"
      tags:
        - svi_ip

    - name: Configure Loopback Interface Descriptions   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: true
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks

    - name: Configure IP for Loopback   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
              - address: "{{ item.ip_secondary | default('null') }}/{{ item.intf_subnet }}"
                secondary: "{{ item.sec_value | default('false') }}"
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks_ip

    - name: Configure Physical Ethernet Ports   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: "{{ item.intf_status }}"
            mode: "{{ item.intf_mode }}"
            mtu: "{{ intf_mtu }}"
        state: merged
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_ports

    - name: Configure IP for Physical Ethernet Ports   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
        state: merged
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_physical_ports_ip

#CHECK
    - name: Configure L2 Interfaces to Servers   #OK.$
      cisco.nxos.nxos_l2_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            mode: "{{ item.switchport_mode }}"
            access:
              vlan: "{{ item.access_vlan }}"
        state: merged
      loop: "{{ server_interfaces }}"
      tags:
        - configure_l2_interfaces
#CHECK

    - name: Configure LAG Interfaces   #OK.$
      cisco.nxos.nxos_lag_interfaces:
        config:
          - name: "{{ item.intf_po }}"
            members:
              - member: "{{ item.intf_name }}"
        state: merged
      loop: "{{ server_interfaces }}"
      tags:
        - configure_lag_interfaces

#ERROR AFTER 1st RUN WITH NXOS_VPC MODULE, PAY ATTENTION TO THE NEXT TASK WITH NXOS_CONFIG
    # - name: Configure VPC domain   #OK.$
    #   cisco.nxos.nxos_vpc:
    #     domain: "{{ vpc_domain }}"
    #     pkl_dest: "{{ vpc_pkl_dest }}"
    #     # pkl_src: "{{ vpc_pkl_src }}"
    #     delay_restore: "{{ vpc_delay_restore }}"
    #     auto_recovery_reload_delay: "{{ vpc_auto_recovery }}"
    #   tags: vpc

    # - name: Configure VPC domain   #OK.$
    #   cisco.nxos.nxos_config:
    #     lines:
    #       - peer-keepalive destination {{ vpc_pkl_dest }}
    #       - delay restore {{vpc_delay_restore}}
    #       - auto-recovery reload-delay {{vpc_auto_recovery}}
    #     parents: vpc domain {{ vpc_domain }}
    #     save_when: modified
    #   tags:
    #     - vpc_domain

    # - name: LEAF vpc peer link port channel configuration   #OK.$
    #   cisco.nxos.nxos_lag_interfaces:
    #     config:
    #       - name: "{{ vpc_po_id }}"
    #         members:
    #           - member: "Ethernet{{ item.vpc_pl_mem }}"
    #             mode: "{{ vpc_po_mode }}"
    #     state: merged
    #   loop: "{{ vpc_pl_po_members }}"
    #   tags:
    #     - vpc_peerlink_pc

    # - name: vpc peerlink configuration   #OK.$
    #   cisco.nxos.nxos_vpc_interface:
    #     portchannel: "{{ vpc_po_id }}"
    #     peer_link: "{{ vpc_pl }}"
    #     state: present
    #   tags:
    #     - vpc_pl_po

    # - name: vpc peerlink trunk configuration   #OK.$
    #   cisco.nxos.nxos_l2_interfaces:
    #     config:
    #       - name: "port-channel{{ vpc_po_id }}"
    #         mode: "{{ vpc_pl_sw_mode }}"
    #         trunk:
    #           native_vlan: "{{ vpc_native_vlan }}"
    #     state: merged
    #   tags:
    #     - vpc_pl_trunk

    # - name: leafs vpc peer-link enabling   #OK.$
    #   cisco.nxos.nxos_interfaces:
    #     config:
    #       - name: "Ethernet{{ item.vpc_pl_mem }}"
    #         enabled: true
    #     state: merged
    #   loop: "{{ vpc_pl_po_members }}"
    #   tags:
    #     - vpc_pl_enable

    # - name: vpc-portchannel configuration   #OK.$
    #   cisco.nxos.nxos_vpc_interface:
    #     portchannel: "{{ item.intf_po }}"
    #     vpc: "{{ item.intf_po }}"
    #     state: present
    #   loop: "{{ server_interfaces }}"
    #   tags:
    #     - vpc_po

    - name: Configure Interfaces, PIM   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_pim_interface:
        interface: "{{ item.intf_name }}"
        sparse: true
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_pim_ports

    - name: Configure OSPF   #OK.$
      cisco.nxos.nxos_ospfv2:
        config:
          processes:
            - process_id: "{{ ospf_pro_id }}"
              router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first }}"
      tags:
        - configure_ospf

    - name: Configure Interfaces, OSPF   #OK.$ (CHANGE LOOP NAME)
      cisco.nxos.nxos_ospf_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            address_family:
              - afi: ipv4
                network: "{{ ospf_net_type }}"
                processes:
                  - process_id: "{{ ospf_pro_id }}"
                    area:
                      area_id: "{{ ospf_site_area_id }}"
      with_items:
        - "{{ physical_interfaces }}"
        - "{{ loopback_interfaces }}"
      tags:
        - configure_ospf_ports

    - name: Configure NVE Interface for VXLAN   #OK.$
      cisco.nxos.nxos_vxlan_vtep:
        interface: "{{ nve_intf_name }}"
        source_interface: "{{ nve_src_intf }}"
        advertise_virtual_rmac: true
        shutdown: "{{ nve_intf_status }}"
        host_reachability: true
        state: present
      tags:
        - configure_nve

    - name: Configure VNIs for NVE vlans   #OK.$
      cisco.nxos.nxos_vxlan_vtep_vni:
        interface: "{{ nve_intf_name }}"
        vni: "{{ item.vnid }}"
        multicast_group: "{{ vrf_config | selectattr('vrf_name', 'equalto', item.vrf_name) | map(attribute='vrf_mcast_group') | first }}"
        state: present
        suppress_arp: true
      with_items:
        - "{{ l2vlans }}"
        - "{{ l3vlans }}"
      tags:
        - configure_vlan_multicasts

    - name: Configure VNIs for NVE vlans   #OK.$
      cisco.nxos.nxos_vxlan_vtep_vni:
        interface: "{{ nve_intf_name }}"
        vni: "{{ item.vnid }}"
        assoc_vrf: true
      loop: "{{ vrf_config }}"
      tags:
        - configure_assoc_vrf

    - name: telemetry configuration destination_groups   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          # source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          destination_groups:
            - id: "{{ item.0.dst_grp_id }}"
              destination:
                ip: "{{ item.1.dst_grp_ip }}"
                port: "{{ item.1.dst_grp_port }}"
                protocol: "{{ item.1.dst_grp_protocol }}"
                encoding: "{{ item.1.dst_grp_encoding }}"
      loop: "{{ telemetry_destination_groups  | subelements('destination') }}"
      tags:
        - telemetry_destination_groups

    - name: telemetry configuration sensor_groups   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          # source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          sensor_groups:
            - id: "{{ item.0.sns_grp_id }}"
              data_source: "{{ item.0.sns_grp_data_src }}"
              path:
                name: "{{ item.1.sns_grp_path_name }}"
                depth: "{{ item.1.sns_grp_path_depth }}"
      loop: "{{ telemetry_sensor_groups | subelements('path') }}"
      tags:
        - telemetry_sensor_groups

    - name: telemetry configuration subscriptions   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          # source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          subscriptions:
            - id: "{{ item.0.sub_grp_id }}"
              destination_group: "{{ item.0.dst_grp_id }}"
              sensor_group:
                id: "{{ item.1.sns_grp_id }}"
                sample_interval: "{{ item.1.sub_interval }}"
        state: merged
      loop: "{{ telemetry_subscriptions | subelements('sensor_group') }}"
      tags:
        - telemetry_subscriptions

    - name: Configure BGP templates   #OK.$
      cisco.nxos.nxos_bgp_templates:
        config:
          as_number: "{{ bgp_asn }}"
          neighbor:
            - name: "{{ bgp_neighbor_template }}"
              update_source: "{{ bgp_update_src }}"
              ebgp_multihop: "{{ ebgp_multihop }}"
              address_family:
                - afi: "ipv4"
                  safi: "unicast"
                  send_community: "extended"
                - afi: "l2vpn"
                  safi: "evpn"
                  send_community: "extended"
      tags: configure_bgp_template

    - name: Configure BGP Process and Neighbors   #OK.$
      cisco.nxos.nxos_bgp_global:
        config:
          as_number: "{{ bgp_asn }}"
          router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first}}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              remote_as: "{{ bgp_peer_asn }}"
              inherit:
                peer: "{{ bgp_neighbor_template }}"
              shutdown: "{{ peer_status }}"
        state: merged
      loop: "{{ bgp }}"
      tags: configure_bgp_af

    - name: Configure BGP L3VNI VRFs   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - vrf: "{{ item.vrf_name }}"
              afi: ipv4
              safi: unicast
              networks:
                - prefix: "{{ item.bgp_prefix }}"
              advertise_l2vpn_evpn: true              
        state: merged
      loop: "{{ l3vlans }}"
      tags: configure_bgp_vrf

    - name: Configure BGP VPC-Pairs Advertisement   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              advertise_pip: true
        state: merged
      tags: configure_bgp_vpc_adv

    - name: Configure BGP Maximum Paths   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
            - afi: ipv4
              safi: unicast
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
        state: merged
      tags: configure_bgp_max_path

    - name: Configure BGP neighbor   #OK.$
      cisco.nxos.nxos_bgp_neighbor_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              address_family:
                - afi: l2vpn
                  safi: evpn
                  rewrite_evpn_rt_asn: true
        state: merged
      loop: "{{ bgp }}"
      tags: bgp_neighbor

    # - name: Copy running config to startup config
    #   cisco.nxos.nxos_config:
    #     backup: yes
    #     save_when: always
    #   tags: write

    - name: Confiuration Saving   #OK.$
      cisco.nxos.nxos_config:
        lines:
          - copy running-config startup-config
      tags: 
        - write