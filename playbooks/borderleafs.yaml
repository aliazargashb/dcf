---
- name: Configure Cisco Nexus Switch - BorderLeaf
  hosts: border_leafs
  gather_facts: false
  connection: network_cli
  vars:
    ansible_network_os: cisco.nxos.nxos

  tasks:
    - name: Configure Loopback Interface Descriptions   #OK.$ (Role Name: configure_underlay_intfs)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: true
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks

    - name: Configure IP for Loopback   #OK.$ (Role Name: configure_underlay_intfs)
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks_ip

    - name: Configure Physical Ethernet Ports   #OK.$ (Role Name: configure_underlay_intfs)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: "{{ item.intf_status }}"
            mode: "{{ item.intf_mode }}"
            mtu: "{{ intf_mtu }}"
        state: merged
      with_items:
        - "{{ physical_interfaces }}"
        - "{{ external_l2_interfaces }}"
      tags:
        - configure_ports

    - name: Configure IP for Physical Ethernet Ports   #OK.$ (Role Name: configure_underlay_intfs)
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
        state: merged
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_physical_ports_ip

    - name: Configure OSPF   #OK.$ (Role Name: configure_ospf_leaf)
      cisco.nxos.nxos_ospfv2:
        config:
          processes:
            - process_id: "{{ ospf_pro_id }}"
              router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first }}"
      tags:
        - configure_ospf

    - name: Configure Interfaces, OSPF   #OK.$ (Role Name: configure_ospf_leaf)
      cisco.nxos.nxos_ospf_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            address_family:
              - afi: ipv4
                network: "{{ ospf_net_type }}"
                processes:
                  - process_id: "{{ ospf_pro_id }}"
                    area:
                      area_id: "{{ ospf_site_area_id }}"
      with_items:
        - "{{ physical_interfaces }}"
        - "{{ loopback_interfaces }}"
      tags:
        - configure_ospf_ports

    - name: anycast gateway configuration   #OK.$ (Role Name: configure_anycast_gw)
      cisco.nxos.nxos_overlay_global:
        anycast_gateway_mac: "{{ anycast_gw_mac }}"
      tags:
        - anycast_gateway

    - name: Configure PIM RP address   #OK.$ (Role Name: configure_pim_multicast)
      cisco.nxos.nxos_pim_rp_address:
        rp_address: "{{ pim_rp_ip }}"
        group_list: "{{ pim_mgroup }}"
      tags:
        - pim_multicast

    - name: Configure Interfaces, PIM   #OK.$ (Role Name: configure_pim_ports)
      cisco.nxos.nxos_pim_interface:
        interface: "{{ item.intf_name }}"
        sparse: true
      with_items:
        - "{{ physical_interfaces }}"
        - "{{ loopback_interfaces }}"
      tags:
        - configure_pim_ports

    - name: Configure BGP templates   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_templates:
        config:
          as_number: "{{ bgp_asn }}"
          neighbor:
            - name: "{{ bgp_neighbor_template }}"
              update_source: "{{ bgp_update_src }}"
              ebgp_multihop: "{{ ebgp_multihop }}"
              address_family:
                - afi: "ipv4"
                  safi: "unicast"
                  send_community: "extended"
                - afi: "l2vpn"
                  safi: "evpn"
                  send_community: "extended"
      tags: configure_bgp_template

    - name: Configure BGP Process and Neighbors   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_global:
        config:
          as_number: "{{ bgp_asn }}"
          log_neighbor_changes: true
          router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first}}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              remote_as: "{{ bgp_peer_asn }}"
              inherit:
                peer: "{{ bgp_neighbor_template }}"
              shutdown: "{{ peer_status }}"
        state: merged
      loop: "{{ bgp }}"
      tags: configure_bgp_af

    - name: Configure BGP L3VNI VRFs   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - vrf: "{{ item.vrf_name }}"
              afi: ipv4
              safi: unicast
              networks:
                - prefix: "{{ item.bgp_prefix }}"
              advertise_l2vpn_evpn: true              
        state: merged
      loop: "{{ l3vlans }}"
      tags: configure_bgp_vrf

    - name: Configure BGP Maximum Paths   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
            - afi: ipv4
              safi: unicast
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
        state: merged
      tags: configure_bgp_max_path

    - name: Configure BGP neighbor   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_neighbor_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              address_family:
                - afi: l2vpn
                  safi: evpn
                  rewrite_evpn_rt_asn: true
        state: merged
      loop: "{{ bgp }}"
      tags: bgp_neighbor

    - name: Configure Border Leafs Prefix-Lists
      cisco.nxos.nxos_prefix_lists:
        config:
          - afi: ipv4
            prefix_lists:
              - name: "{{ item.0.name }}"
                description: "{{ item.0.description }}"
                entries:
                - sequence: "{{ item.1.prefix_list_seq }}"
                  action: "{{ item.1.prefix_list_seq_action }}"
                  prefix: "{{ item.1.prefix_list_prefixes }}"
        state: merged
      loop: "{{ prefix_lists_data | subelements('entries') }}"
      tags: configure_prefix_lists

    # - name: Border Leafs inbound prefix-lists   #OK.$ (Role Name: configure_bgp_borderleaf)
    #   cisco.nxos.nxos_prefix_lists:  
    #     config:
    #       - afi: ipv4
    #         prefix_lists:
    #           - name: External_to_DC
    #             description: External_to_DC_Prefixes
    #             entries:
    #             - sequence: "{{ item.prefix_list_seq }}"
    #               action: "{{ item.prefix_list_seq_action }}"
    #               prefix: "{{ item.prefix_list_prefixes }}"
    #     state: merged
    #   loop: "{{ inbound_prefix_lists }}"
    #   tags: inbound_prefix_lists

    # - name: Border Leafs outbound prefix-lists   #OK.$ (Role Name: configure_bgp_borderleaf)
    #   cisco.nxos.nxos_prefix_lists:  
    #     config:
    #       - afi: ipv4
    #         prefix_lists:
    #           - name: DC_to_External
    #             description: DC_to_External_Prefixes
    #             entries:
    #             - sequence: "{{ item.prefix_list_seq }}"
    #               action: "{{ item.prefix_list_seq_action }}"
    #               prefix: "{{ item.prefix_list_prefixes }}"
    #     state: merged
    #   loop: "{{ outbound_prefix_lists }}"
    #   tags: outbound_prefix_lists

    - name: Border Leafs route-maps   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_route_maps:  
        config:
          - route_map: External_to_DC
            entries:
              - sequence: 10
                action: permit
                description: External_to_DC_route-maps
                match:
                  ip:
                    address:
                      prefix_lists: External_to_DC
          - route_map: DC_to_External
            entries:
              - sequence: 10
                action: permit
                description: DC_to_External_route-maps
                match:
                  ip:
                    address:
                      prefix_lists: DC_to_External
        state: merged
      tags: bl_route_maps                            

    - name: Configure BGP templates External   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_templates:
        config:
          as_number: "{{ bgp_asn }}"
          neighbor:
            - name: "{{ bgp_neighbor_template_bl }}"
              ebgp_multihop: "{{ ebgp_multihop }}"
              address_family:
                - afi: "ipv4"
                  safi: "unicast"
                  send_community: "extended"
                  route_map:
                    inbound: "{{ inbound_route_map }}"
                    outbound: "{{ outbound_route_map }}"
                  soft_reconfiguration_inbound:
                    always: true  
      tags: configure_bgp_template_ext

    - name: Configure BGP Process and Neighbors External   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_global:
        config:
          as_number: "{{ bgp_asn }}"
          log_neighbor_changes: true
          vrfs:
            - vrf: "{{ item.vrf_name }}"
              neighbors:
                - neighbor_address: "{{ item.bgp_neighbor_addr_ext }}"
                  update_source: "{{ item.bgp_update_src_ext }}"
                  remote_as: "{{ item.bgp_peer_asn_ext }}"
                  inherit:
                    peer: "{{ bgp_neighbor_template_bl }}"
                  shutdown: "{{ peer_status }}"           
              router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first}}"
        state: merged
      loop: "{{ external_l3vlans }}"
      tags: configure_bgp_af_ext

    - name: Configure BGP L3VNI VRFs External   #OK.$ (Role Name: configure_bgp_borderleaf)
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - vrf: "{{ item.vrf_name }}"
              afi: ipv4
              safi: unicast
              advertise_l2vpn_evpn: true
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"              
        state: merged
      loop: "{{ external_l3vlans }}"
      tags: configure_bgp_vrf_ext

    - name: Configure BGP templates   #OK.$
      cisco.nxos.nxos_bgp_templates:
        config:
          as_number: "{{ bgp_asn }}"
          neighbor:
            - name: "{{ bgp_neighbor_template }}"
              update_source: "{{ bgp_update_src }}"
              ebgp_multihop: "{{ ebgp_multihop }}"
              address_family:
                - afi: "ipv4"
                  safi: "unicast"
                  send_community: "extended"
                - afi: "l2vpn"
                  safi: "evpn"
                  send_community: "extended"
      tags: configure_bgp_template

    - name: Configure BGP Process and Neighbors   #OK.$
      cisco.nxos.nxos_bgp_global:
        config:
          as_number: "{{ bgp_asn }}"
          log_neighbor_changes: true
          router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first}}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              remote_as: "{{ bgp_peer_asn }}"
              inherit:
                peer: "{{ bgp_neighbor_template }}"
              shutdown: "{{ peer_status }}"
        state: merged
      loop: "{{ bgp }}"
      tags: configure_bgp_af

    - name: Configure BGP L3VNI VRFs   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - vrf: "{{ item.vrf_name }}"
              afi: ipv4
              safi: unicast
              networks:
                - prefix: "{{ item.bgp_prefix }}"
              advertise_l2vpn_evpn: true
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"                      
        state: merged
      loop: "{{ l3vlans }}"
      tags: configure_bgp_vrf

    - name: Advertise PIP in AF   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              advertise_pip: true
        state: merged
      tags: adv_pip

    - name: Configure BGP Maximum Paths   #OK.$
      cisco.nxos.nxos_bgp_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          address_family:
            - afi: l2vpn
              safi: evpn
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
            - afi: ipv4
              safi: unicast
              maximum_paths:
                parallel_paths: "{{ bgp_maximum_path }}"
        state: merged
      tags: configure_bgp_max_path

    - name: Configure BGP neighbor   #OK.$
      cisco.nxos.nxos_bgp_neighbor_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          neighbors:
            - neighbor_address: "{{ item.bgp_neighbor_addr }}"
              address_family:
                - afi: l2vpn
                  safi: evpn
                  rewrite_evpn_rt_asn: true
        state: merged
      loop: "{{ bgp }}"
      tags: bgp_neighbor

    - name: Ensure VLANs are configured   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
            mapped_vni: "{{ item.vnid }}"
        state: merged
      with_items:
        - "{{ vrf_config }}"
      tags:
        - configure_tenant_l3vni

    - name: Ensure External VLANs are configured   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
        state: merged
      with_items:
        - "{{ external_l3vlans }}"
      tags:
        - configure_Tenants_to_External

    - name: Configure VRFs   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_vrf:
        aggregate:
          - name: "{{ item.vrf_name }}"
            vni: "{{ item.vnid }}"
            rd: "{{ item.vrf_rd }}"
      loop: "{{ vrf_config }}"
      tags:
        - configure_vrf

    - name: LEAF tenants_svi naming configuration   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            description: "{{ item.vlan_name }}"
            enabled: true
        state: merged
      with_items: 
        - "{{ vrf_config }}"
        - "{{ external_l3vlans }}"
      tags:
        - tenants_and_external_svi_naming

    - name: LEAF internal and external tenants_svi vrf membership configuration   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_vrf_interface:
        interface: "vlan{{ item.vlan_id }}"
        vrf: "{{ item.vrf_name }}"
        state: present
      with_items: 
        - "{{ vrf_config }}"
        - "{{ external_l3vlans }}"
      tags:
        - tenant_vrf_mem

    - name: LEAF tenants_svi ip forward configuration   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            ip_forward: "{{ ipforward }}"
            enabled: true
        state: merged
      loop: "{{ vrf_config }}"
      tags:
        - tenant_ip_forward

    - name: Ensure VLANs are configured   #OK.$ (Role Name: configure_fabric_vlans_bl)
      cisco.nxos.nxos_vlans:
        config:
          - vlan_id: "{{ item.vlan_id }}"
            name: "{{ item.vlan_name }}"
            mapped_vni: "{{ item.vnid }}"
        state: merged
      with_items:
        - "{{ l2vlans }}"
        - "{{ l3vlans }}"
      tags:
        - configure_vlans

    - name: Configure VRF_AF   #OK.$ (Role Name: configure_tenant_bl)
      cisco.nxos.nxos_vrf_af:
        afi: ipv4
        route_target_both_auto_evpn: true
        route_targets:
          - direction: both
            rt: auto
            state: present
        state: present
        vrf: "{{ item.vrf_name }}"
      loop: "{{ vrf_config }}"
      tags:
        - configure_vrf_af

    - name: VNI configuration   #OK.$ (Role Name: configure_fabric_vlans_bl)
      cisco.nxos.nxos_evpn_vni:
        vni: "{{ item.vnid }}"
        route_distinguisher: "{{ l2rd }}"
        route_target_both: "{{ l2rt }}"
        state: "present"
      with_items:
        - "{{ l2vlans }}"
        - "{{ l3vlans }}"
      tags:
        - l2evpn

    - name: LEAF SVI Naming   #OK.$ (Role Name: configure_fabric_vlans_bl)
      cisco.nxos.nxos_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            description: "{{ item.vlan_name }}"
            fabric_forwarding_anycast_gateway: "{{ anycast_gw_mac_status }}"
            enabled: "{{ svi_status }}"
        state: merged
      loop: "{{ l3vlans }}"
      tags:
        - svi_naming

    - name: LEAF internal and external SVI VRF Membership   #OK.$ (Role Name: configure_fabric_vlans_bl)
      cisco.nxos.nxos_vrf_interface:
        interface: "vlan{{ item.vlan_id }}"
        vrf: "{{ item.vrf_name }}"
        state: present
      with_items: 
        - "{{ l3vlans }}"
        - "{{ external_l3vlans }}"
      tags:
        - svi_vrf_mem

    - name: LEAF internal and external SVI IP Address   #OK.$ (Role Name: configure_fabric_vlans_bl)
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "vlan{{ item.vlan_id }}"
            ipv4:
              - address: "{{ item.vlan_id_ip }}/{{ item.vlan_id_subnet }}"
        state: merged
      with_items:
        - "{{ l3vlans }}"
        - "{{ external_l3vlans }}"
      tags:
        - svi_ip

    - name: Configure NVE Interface for VXLAN   #OK.$ (Role Name: configure_nve_intf)
      cisco.nxos.nxos_vxlan_vtep:
        interface: "{{ nve_intf_name }}"
        source_interface: "{{ nve_src_intf }}"
        shutdown: "{{ nve_intf_status }}"
        host_reachability: true
        state: present
      tags:
        - configure_nve

    - name: Configure VNIs for NVE vlans   #OK.$ (Role Name: configure_nve_intf)
      cisco.nxos.nxos_vxlan_vtep_vni:
        interface: "{{ nve_intf_name }}"
        vni: "{{ item.vnid }}"
        multicast_group: "{{ vrf_config | selectattr('vrf_name', 'equalto', item.vrf_name) | map(attribute='vrf_mcast_group') | first }}"
        state: present
        # suppress_arp: true
      with_items:
        - "{{ l2vlans }}"
        - "{{ l3vlans }}"
      tags:
        - configure_vlan_multicasts

    - name: Configure VNIs for NVE vlans   #OK.$ (Role Name: configure_nve_intf)
      cisco.nxos.nxos_vxlan_vtep_vni:
        interface: "{{ nve_intf_name }}"
        vni: "{{ item.vnid }}"
        assoc_vrf: true
      loop: "{{ vrf_config }}"
      tags:
        - configure_assoc_vrf

    - name: Configure LAG Interfaces   #OK.$ (Role Name: configure_bl_local_segment_lag)
      cisco.nxos.nxos_lag_interfaces:
        config:
          - name: "{{ item.intf_po }}"
            members:
              - member: "{{ item.intf_name }}"
                mode: "{{ item.intf_lag_mode }}"
        state: merged
      loop: "{{ server_interfaces }}"
      when: intf_po is defined
      tags:
        - configure_lag_interfaces

    - name: Configure L2 Interfaces to Servers   #OK.$ (Role Name: configure_bl_local_segment_lag)
      cisco.nxos.nxos_l2_interfaces:
        config:
          - name: "port-channel{{ item.intf_po }}"
            mode: "{{ item.switchport_mode }}"
            access:
              vlan: "{{ item.access_vlan }}"
        state: merged
      loop: "{{ server_interfaces }}"
      when: item.switchport_mode == 'access' and item.intf_po is defined
      tags:
        - configure_l2_interfaces_access

    - name: Configure L2 Interfaces to Servers   #OK.$ (Role Name: configure_bl_local_segment_lag)
      cisco.nxos.nxos_l2_interfaces:
        config:
          - name: "port-channel{{ item.intf_po }}"
            mode: "{{ item.switchport_mode }}"
            trunk:
              allowed_vlans: "{{ item.trunk_vlan }}"
              # native_vlan: "{{ native_vlan_id }}"
        state: replaced
      loop: "{{ server_interfaces }}"
      when: item.switchport_mode == 'trunk' and item.intf_po is defined 
      tags:
        - configure_l2_interfaces_trunk

    - name: Configure internal and external L2 Interfaces to Servers and Externals-No Port-Channel   #OK.$ (Role Name: configure_bl_local_segment_orphan)
      cisco.nxos.nxos_l2_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            mode: "{{ item.switchport_mode }}"
            trunk:
              allowed_vlans: "{{ item.trunk_vlan }}"
              # native_vlan: "{{ native_vlan_id }}" 
        state: merged
      with_items:
        - "{{ server_interfaces }}"
        - "{{ external_l2_interfaces }}"
      when: item.switchport_mode == 'trunk' and item.intf_po is not defined
      tags:
        - configure_l2_interfaces_trunk_nopo

    - name: Configure L2 Interfaces to Servers-No Port-Channel   #OK.$ (Role Name: configure_bl_local_segment_orphan)
      cisco.nxos.nxos_l2_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            mode: "{{ item.switchport_mode }}"
            access:
              vlan: "{{ item.access_vlan }}"
        state: merged
      loop: "{{ server_interfaces }}"
      when: item.switchport_mode == 'access' and item.intf_po is not defined
      tags:
        - configure_l2_interfaces_access_nopo

    - name: Copy running config to startup config   #OK.$ (Role Name: write_bck)
      cisco.nxos.nxos_config:
        backup: no
        save_when: always
      tags: write

    # - name: Confiuration Saving   #OK.$
    #   cisco.nxos.nxos_config:
    #     lines:
    #       - copy running-config startup-config
    #   tags: 
    #     - write