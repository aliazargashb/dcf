---
- name: Configure Cisco Nexus Switch - SIC Spine
  hosts: sic_spine1
  gather_facts: false
  connection: network_cli
  vars:
    ansible_network_os: cisco.nxos.nxos

  tasks:
    - name: Configure AAA   #CHECK. #VARS MUST GO TO ALL
      cisco.nxos.nxos_config:
        lines:
          - aaa authentication login default group AAA_Servers local
          - aaa authentication login console group AAA_Servers local
          - aaa authorization commands default group AAA_Servers local
          - aaa accounting default group AAA_Servers local
          - aaa authorization config-commands default group AAA_Servers local
          - aaa authentication login error-enable
          - tacacs-server directed-request
          - aaa group server tacacs+ AAA_Servers
          - tacacs-server host 172.27.0.1 key key1
          - tacacs-server host 172.27.0.2 key key2
          - use-vrf management
          - source-interface management
      tags: 
        - aaa_config

    - name: Set Hostname   #OK.$
      cisco.nxos.nxos_hostname:
        config:
          hostname: "{{ hostname }}"
      tags:
        - set_hostname

    - name: Enable necessary features   #OK.$
      cisco.nxos.nxos_feature:
        feature: "{{ item }}"
        state: enabled
      loop: "{{ features }}"
      tags:
        - enable_features

    - name: Configure NTP #OK.%
      cisco.nxos.nxos_ntp_global:
        config:
          servers:
            - server: "{{ item }}"
              vrf: "{{ ntp_vrf }}"
      loop: "{{ ntp_server }}"
      tags:
        - ntp_config

    - name: Create user account   #OK.$
      cisco.nxos.nxos_user:
        name: "{{ device_user }}"
        configured_password: "{{ device_pass }}"
        role: "{{ user_role }}"
      tags:
        - create_user

    - name: Configure PIM RP address   #OK.$
      cisco.nxos.nxos_pim_rp_address:
        rp_address: "{{ pim_rp_ip }}"
        group_list: "{{ pim_mgroup }}"
      tags: 
        - pim_multicast

    - name: Configure PIM Anycast-RP addresses   #OK.$
      cisco.nxos.nxos_config:
        lines:
          - ip pim anycast-rp {{ anycast_rp_addr }} {{ item }}
      loop: "{{ rp_addr }}"
      tags: 
        - pim_anycast_rp

    - name: Configure Loopback Interface Descriptions   #OK.$
      cisco.nxos.nxos_interfaces:
        config:
          - name: "Loopback{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: true
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks

    - name: Configure IP for Loopback #OK.$
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
              - address: "{{ item.ip_secondary | default('null') }}/{{ item.intf_subnet }}"
                secondary: "{{ item.sec_value | default('false') }}"
        state: merged
      loop: "{{ loopback_interfaces }}"
      tags:
        - configure_loopbacks_ip

    - name: Configure Physical Ethernet Ports   #OK.$
      cisco.nxos.nxos_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            description: "{{ item.intf_desc }}"
            enabled: "{{ item.intf_status }}"
            mode: "{{ item.intf_mode }}"
        state: merged
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_ports

    - name: Configure IP for Physical Ethernet Ports   #OK.$
      cisco.nxos.nxos_l3_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            ipv4:
              - address: "{{ item.intf_ip }}/{{ item.intf_subnet }}"
        state: merged
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_physical_ports_ip

    - name: Configure Interfaces, PIM   #OK.$
      cisco.nxos.nxos_pim_interface:
        interface: "{{ item.intf_name }}"
        sparse: true
      loop: "{{ physical_interfaces }}"
      tags:
        - configure_pim_ports

    - name: Configure OSPF   #OK.$
      cisco.nxos.nxos_ospfv2:
        config:
          processes:
            - process_id: "{{ ospf_pro_id }}"
              router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first }}"
      tags:
        - configure_ospf

    - name: Configure Interfaces, OSPF   #OK.$ (IMP)
      cisco.nxos.nxos_ospf_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            address_family:
              - afi: ipv4
                network: "{{ ospf_net_type }}"
                processes:
                  - process_id: "{{ ospf_pro_id }}"
                    area:
                      area_id: "{{ ospf_site_area_id }}"
      loop: "{{ to_site_ospf_intf }}"
      tags:
        - configure_site_ospf_ports

    - name: Configure Interfaces, OSPF   #OK.$ (IMP)
      cisco.nxos.nxos_ospf_interfaces:
        config:
          - name: "{{ item.intf_name }}"
            address_family:
              - afi: ipv4
                network: "{{ ospf_net_type }}"
                processes:
                  - process_id: "{{ ospf_pro_id }}"
                    area:
                      area_id: "{{ ospf_dci_area_id }}"
      loop: "{{ to_dci_ospf_intf }}"
      tags:
        - configure_dci_ospf_ports

    - name: Configure BGP templates   #OK.$
      cisco.nxos.nxos_bgp_templates:
        config:
          as_number: "{{ bgp_asn }}"
          neighbor:
            - name: "{{ item.bgp_neighbor_template }}"
              update_source: "{{ bgp_update_src }}" 
              ebgp_multihop: "{{ ebgp_multihop }}"   
              address_family:          
                - afi: "ipv4"
                  safi: "unicast"
                  send_community: "extended"
                - afi: "l2vpn"
                  safi: "evpn"
                  send_community: "extended"
                  route_map:
                    outbound: "{{ bgp_route_map }}"
      loop: "{{ bgp }}"
      tags: configure_bgp_template

    - name: Configure BGP Process and Neighbors   #OK.$
      cisco.nxos.nxos_bgp_global:
        config:
          as_number: "{{ bgp_asn }}"
          router_id: "{{ loopback_interfaces | selectattr('intf_name', 'match', 'Loopback0') | map(attribute='intf_ip') | first}}"
          neighbors:
            - neighbor_address: "{{ item.neighbor_address }}"
              remote_as: "{{ item.bgp_peer_asn }}"
              inherit:
                peer: "{{ item.bgp_neighbor_template }}"
              shutdown: false
        state: merged
      loop: "{{ bgp }}"
      tags: configure_bgp_af

    - name: Configure BGP neighbor   #OK.$
      cisco.nxos.nxos_bgp_neighbor_address_family:
        config:
          as_number: "{{ bgp_asn }}"
          neighbors:
            - neighbor_address: "{{ item.neighbor_address }}"
              address_family:
                - afi: l2vpn
                  safi: evpn
                  rewrite_evpn_rt_asn: true
        state: merged
      loop: "{{ bgp }}"
      tags: bgp_neighbor

    - name: Configure Route-Map   #OK.$
      cisco.nxos.nxos_route_maps:
        config:
          - route_map: "{{ bgp_route_map }}"
            entries:
              - sequence: "{{ bgp_route_map_seq }}"
                action: "{{ bgp_route_map_action }}"
                set:
                  ip:
                    next_hop:
                      unchanged: true
        state: merged
      tags: configure_route_map

    - name:  telemetry configuration destination_groups   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          destination_groups:
            - id: "{{ item.0.dst_grp_id }}"
              destination:
                ip: "{{ item.1.dst_grp_ip }}"
                port: "{{ item.1.dst_grp_port }}"
                protocol: "{{ item.1.dst_grp_protocol }}"
                encoding: "{{ item.1.dst_grp_encoding }}"
      loop: "{{ telemetry_destination_groups  | subelements('destination') }}"
      tags:
        - telemetry_destination_groups

    - name:  telemetry configuration sensor_groups   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          sensor_groups:
            - id: "{{ item.0.sns_grp_id }}"
              data_source: "{{ item.0.sns_grp_data_src }}"
              path:
                name: "{{ item.1.sns_grp_path_name }}"
                depth: "{{ item.1.sns_grp_path_depth }}"
      loop: "{{ telemetry_sensor_groups  | subelements('path') }}"  
      tags:
        - telemetry_sensor_groups

    - name:  telemetry configuration subscriptions   #OK.$
      cisco.nxos.nxos_telemetry:
        config:
          source_interface: "{{ telemetry_src_intf }}"
          vrf: "{{ telemetry_src_vrf }}"
          subscriptions:
            - id: "{{ item.0.sub_grp_id }}"
              destination_group: "{{ item.0.dst_grp_id }}"
              sensor_group:
                id: "{{ item.1.sns_grp_id }}"
                sample_interval: "{{ item.1.sub_interval }}"
        state: merged
      loop: "{{ telemetry_subscriptions  | subelements('sensor_group') }}"  
      tags:
        - telemetry_subscriptions